from typing import Optional

from fastapi import APIRouter, HTTPException

from src.reports import generate_filtered_report
from src.utils import load_transactions_from_excel

router = APIRouter()


@router.get("/operations")
def get_operations(
    status: Optional[str] = None,
    currency: Optional[str] = None,
    category: Optional[str] = None,
) -> dict:
    transactions = load_transactions_from_excel("data/operations3.xlsx")
    if not transactions:
        raise HTTPException(status_code=404, detail="–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö")

    filtered = [
        t
        for t in transactions
        if (not status or t.get("–°—Ç–∞—Ç—É—Å") == status)
        and (not currency or t.get("–í–∞–ª—é—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏") == currency)
        and (not category or t.get("–ö–∞—Ç–µ–≥–æ—Ä–∏—è") == category)
    ]

    return {"operations": filtered}


@router.get("/report")
def create_report(status: Optional[str] = None, currency: Optional[str] = None) -> dict:
    """
    üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Excel-–æ—Ç—á—ë—Ç–∞ –ø–æ —Ñ–∏–ª—å—Ç—Ä—É.

    :param status: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å—Ç–∞—Ç—É—Å—É.
    :param currency: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –≤–∞–ª—é—Ç–µ.
    :return: –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç—á—ë—Ç–∞.
    """
    file_path = generate_filtered_report(status=status, currency=currency)
    return {"message": f"–û—Ç—á—ë—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ {file_path}"}
