from datetime import date, datetime

import httpx
import streamlit as st

st.set_page_config(page_title="FinWidget | –î–∞—à–±–æ—Ä–¥", layout="wide")

# üëá –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
st.title("üìä –ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π FinWidget")
date_input = st.date_input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É", value=datetime.today().date())
time_input = st.time_input("–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è", value=datetime.now().time())

dt = datetime.combine(date_input, time_input)
dt_str = dt.strftime("%Y-%m-%d %H:%M:%S")

# üì° –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å /home
with st.spinner("–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ..."):
    try:
        response = httpx.get("http://127.0.0.1:8000/home", params={"date": dt_str})
        data = response.json()
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ API: {e}")
        st.stop()

# üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
st.header(data["greeting"])

# üí≥ –ö–∞—Ä—Ç—ã
st.subheader("üí≥ –†–∞—Å—Ö–æ–¥—ã –ø–æ –∫–∞—Ä—Ç–∞–º")
for card in data["cards"]:
    st.metric(
        label=f"–ö–∞—Ä—Ç–∞ *{card['last_digits']}", value=f"{card['total_spent']} ‚ÇΩ", delta=f"{card['cashback']} ‚ÇΩ –∫—ç—à–±—ç–∫"
    )

# üìå –¢–æ–ø-5 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
st.subheader("üî• –¢–æ–ø-5 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π")
st.table(data["top_transactions"])

# üí± –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç
st.subheader("üí± –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç")
st.json(data["currency_rates"])

# üìà –ö–æ—Ç–∏—Ä–æ–≤–∫–∏ –∞–∫—Ü–∏–π
st.subheader("üìà –ê–∫—Ü–∏–∏")
st.json(data["stock_prices"])

# üßæ –û—Ç—á—ë—Ç
st.divider()
st.subheader("üì• –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å Excel-–æ—Ç—á—ë—Ç")

# –í—ã–±–æ—Ä —Ñ–∏–ª—å—Ç—Ä–æ–≤
status = st.selectbox("–°—Ç–∞—Ç—É—Å –æ–ø–µ—Ä–∞—Ü–∏–∏", ["", "OK", "ERROR"])
currency = st.selectbox("–í–∞–ª—é—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏", ["", "RUB", "USD", "EUR"])
start_date = st.date_input("–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞", value=date.today().replace(day=1))
end_date = st.date_input("–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è", value=date.today())

# –ö–Ω–æ–ø–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞
if st.button("üìä –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á—ë—Ç"):
    try:
        params = {}
        if status:
            params["status"] = status
        if currency:
            params["currency"] = currency
        if start_date:
            params["start"] = start_date.strftime("%Y-%m-%d")
        if end_date:
            params["end"] = end_date.strftime("%Y-%m-%d")

        report_resp = httpx.get("http://127.0.0.1:8000/report", params=params)
        result = report_resp.json()
        file_path = result["message"].split("–≤ ")[-1]

        st.success("–û—Ç—á—ë—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω.")
        st.download_button(
            label="üìé –°–∫–∞—á–∞—Ç—å –æ—Ç—á—ë—Ç",
            data=open(file_path, "rb").read(),
            file_name="report.xlsx",
            mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
        )
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç—á—ë—Ç–∞: {e}")
